rules_version = '2'

service cloud.firestore {
  match /databases/{database}/documents {
     match /{document=**} {
      allow read, write: if false
  	}

		match /admin/{document=**} {
      allow read: if isLoggedIn(request)
    }

		match /bhs/{document=**} {
      allow read: if true
    }

    match /contest/{document=**} {
      allow read: if isLoggedIn(request)
      allow write: if hasRole(database, request, ["admin"])
    }

    match /stars5/{document=**} {
      allow read: if isLoggedIn(request)
      allow create: if isLoggedIn(request)
      allow update: if isOwner(request, resource) || checkFields(request, resource) || isAdmin(database, request)
      allow delete: if isOwner(request, resource) || isAdmin(database, request)
    }

    match /log/{document=**} {
      allow write: if isLoggedIn(request)
    }

    match /org/{document=**} {
      allow read: if true
      allow write: if hasRole(database, request, ["editor", "admin"])
    }

    match /poi/{document=**} {
      allow read: if true
      allow write: if hasRole(database, request, ["editor", "admin"])
    }

    match /users/{document=**} {
      allow read: if isOwner(request, resource)
      allow create: if isLoggedIn(request)
      allow update: if isOwner(request, resource)
    }

    match /users/{uid}/stars5/{document=**} {
      allow delete: if isOwner(request, resource)
    }

    match /nmsce/{document=**} {
      allow read: if isLoggedIn(request)
      allow create: if isLoggedIn(request)
      allow update: if isOwner(request, resource) || isAdmin(database, request)
      allow delete: if isOwner(request, resource) || isAdmin(database, request)
    }
  }
}

function isLoggedIn(req) {
  return req.auth.uid != null
}

function isOwner(req, res) {
  return req.auth.uid == res.data.uid
}

function hasRole(db, req, roles) {
  return get(/databases/$(db)/documents/admin/$(req.auth.uid)).data.roles.hasAny(roles)
}

function isAdmin(db, req) {
  return get(/databases/$(db)/documents/admin/$(req.auth.uid)).data.roles.hasAny(["admin"]) &&
    get(/databases/$(db)/documents/users/$(req.auth.uid)).data.role == "admin"
}

// request.resource - future
// resource - existing
function checkFields(req, res) {
  return req.resource.data.uid == res.data.uid &&
    req.resource.data.sys == res.data.sys &&
    req.resource.data.reg == res.data.reg
}
